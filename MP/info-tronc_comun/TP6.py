taches = [[0,0,0], [0,2,2], [1,3,9], [3,4,10], [2,5,1], [8,9,4], [1,9,8], 
[1,10,6], [7,11,7], [3,11,3], [0,14,10], [9,14,2], [8,14,4], 
[2,14,8], [11,14,6], [12,15,8], [12,15,5], [17,18,5], [4,19,7], 
[14,19,2], [8,20,1], [16,21,5], [20,23,9], [11,24,5], [18,26,4], 
[24,29,1], [25,32,1], [25,32,8], [19,33,5], [25,35,6], [27,37,6], 
[27,39,3], [28,39,10], [33,39,5], [29,39,10], [30,40,5], [31,42,9], 
[40,43,1], [41,44,5], [40,44,1], [33,46,6], [33,46,8], [34,46,6], 
[36,47,7], [32,47,4], [46,47,8], [41,47,5], [33,48,3], [42,48,10], 
[47,49,1], [40,49,3], [39,53,7], [50,55,4], [43,55,3], [50,55,4], 
[50,56,4], [55,57,9], [46,57,8], [53,60,10], [57,62,4], [57,62,2], 
[52,63,4], [64,67,4], [66,67,9], [60,67,1], [65,68,4], [71,72,10], 
[61,72,1], [61,73,9], [62,73,5], [71,73,10], [67,73,6], [71,74,7], 
[63,74,4], [67,75,7], [65,75,1], [62,75,8], [66,76,4], [64,78,7], 
[72,78,9], [75,79,3], [72,80,1], [68,81,2], [78,81,6], [71,82,9], 
[71,85,8], [76,85,8], [86,87,9], [72,87,2], [83,88,5], [84,90,8], 
[90,91,5], [80,92,6], [84,93,4], [85,94,7], [89,95,1], [91,95,8], 
[92,97,4], [90,97,4], [93,97,6], [92,98,10]]



def pgtc(T,i):
    def dicoto(a,b):
        if a >= b :
            return a
        m = (a+b)//2 + 1
        if T[m][1] <= T[i][0]:
            return dicoto(m,b)
        else :
            return dicoto(a,m-1)
    return dicoto(0,i-1)

print(pgtc(taches,3))

def ordonance(T):
    n = len(T)
    W = [0]*(n+1)
    p = [0]*(n+1)
    for i in range(1,n):
        p[i] = pgtc(T,i)
        W[i] = max(W[i-1],W[p[i]] + T[i][2])
    return W , p

print(ordonance(taches))